services:
  # MongoDB Single Node - ULTRA SIMPLES
  ualflix_db_primary:
    image: mongo:5.0
    container_name: ualflix_db_primary
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=ualflix
    volumes:
      - mongo_data:/data/db
    command: mongod --bind_ip_all --auth
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - ualflix_net

  # RabbitMQ - TESTADO E FUNCIONANDO
  queue_service:
    image: rabbitmq:3-management
    container_name: queue_service
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=ualflix
      - RABBITMQ_DEFAULT_PASS=ualflix_password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - ualflix_net

  # Authentication Service - CORRIGIDO
  authentication_service:
    build:
      context: ./authentication_service
    container_name: authentication_service
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_PRIMARY_HOST=ualflix_db_primary
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=password
      - MONGODB_DATABASE=ualflix
    depends_on:
      ualflix_db_primary:
        condition: service_healthy
    networks:
      - ualflix_net

  # Catalog Service
  catalog_service:
    build:
      context: ./catalog_service
    container_name: catalog_service
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - MONGODB_PRIMARY_HOST=ualflix_db_primary
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=password
      - MONGODB_DATABASE=ualflix
      - QUEUE_HOST=queue_service
      - QUEUE_USER=ualflix
      - QUEUE_PASSWORD=ualflix_password
      - AUTH_SERVICE_URL=http://authentication_service:8000
    volumes:
      - ./video_data:/videos
    depends_on:
      ualflix_db_primary:
        condition: service_healthy
      queue_service:
        condition: service_healthy
    networks:
      - ualflix_net

  # Admin Service
  admin_service:
    build:
      context: ./admin_service
    container_name: admin_service
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      - MONGODB_PRIMARY_HOST=ualflix_db_primary
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=password
      - MONGODB_DATABASE=ualflix
      - AUTH_SERVICE_URL=http://authentication_service:8000
    depends_on:
      ualflix_db_primary:
        condition: service_healthy
      authentication_service:
        condition: service_started
    networks:
      - ualflix_net

  # Streaming Service
  streaming_service:
    build:
      context: ./streaming_service
    container_name: streaming_service
    restart: unless-stopped
    ports:
      - "8003:8001"
    volumes:
      - ./video_data:/videos
    networks:
      - ualflix_net

  # Video Processor
  video_processor:
    build:
      context: ./video_processor
    container_name: video_processor
    restart: unless-stopped
    environment:
      - MONGODB_PRIMARY_HOST=ualflix_db_primary
      - MONGODB_USERNAME=admin
      - MONGODB_PASSWORD=password
      - MONGODB_DATABASE=ualflix
      - QUEUE_HOST=queue_service
      - QUEUE_USER=ualflix
      - QUEUE_PASSWORD=ualflix_password
    volumes:
      - ./video_data:/videos
    depends_on:
      ualflix_db_primary:
        condition: service_healthy
      queue_service:
        condition: service_healthy
    networks:
      - ualflix_net

  # Frontend
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    command: ["serve", "-s", "build", "-l", "3000"]
    depends_on:
      - catalog_service
      - authentication_service
      - admin_service
      - streaming_service
    networks:
      - ualflix_net

  # Nginx - CONFIGURAÇÃO CORRIGIDA
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - catalog_service
      - authentication_service
      - admin_service
      - streaming_service
    networks:
      - ualflix_net

networks:
  ualflix_net:
    driver: bridge

volumes:
  mongo_data:
    driver: local