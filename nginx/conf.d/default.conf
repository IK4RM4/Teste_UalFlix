# ================================================================
# NGINX Load Balancer para UALFlix com Múltiplas Réplicas
# FUNCIONALIDADE 6: Replicação de Serviços
# ================================================================

# Upstream para Authentication Service (2 réplicas)
upstream auth_backend {
    least_conn;  # Balanceamento por menor número de conexões
    
    # Docker Compose automaticamente resolve os nomes das réplicas
    server teste_ualflix-authentication_service-1:8000 max_fails=3 fail_timeout=30s;
    server teste_ualflix-authentication_service-2:8000 max_fails=3 fail_timeout=30s;
    
    # Configurações de health check
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Upstream para Catalog Service (2 réplicas)
upstream catalog_backend {
    least_conn;
    
    server teste_ualflix-catalog_service-1:8000 max_fails=3 fail_timeout=30s;
    server teste_ualflix-catalog_service-2:8000 max_fails=3 fail_timeout=30s;
    
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Upstream para Streaming Service (2 réplicas)
upstream streaming_backend {
    ip_hash;  # Manter sessão com mesmo servidor para streaming
    
    server teste_ualflix-streaming_service-1:8001 max_fails=3 fail_timeout=30s;
    server teste_ualflix-streaming_service-2:8001 max_fails=3 fail_timeout=30s;
    
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Upstream para Admin Service (2 réplicas)
upstream admin_backend {
    round_robin;  # Distribuição equilibrada para admin
    
    server teste_ualflix-admin_service-1:8002 max_fails=3 fail_timeout=30s;
    server teste_ualflix-admin_service-2:8002 max_fails=3 fail_timeout=30s;
    
    keepalive 16;
}

# ================================================================
# SERVIDOR PRINCIPAL - Frontend e API Gateway
# ================================================================

server {
    listen 8080;
    server_name localhost;
    client_max_body_size 1024M;
    
    # Configurações de timeout
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Headers comuns para todos os proxies
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Load-Balancer "NGINX-Replicas";
    
    # Frontend React - ROTA PRINCIPAL
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    # Authentication API - BALANCEAMENTO DE RÉPLICAS
    location /api/auth/ {
        rewrite ^/api/auth(/.*)$ $1 break;
        proxy_pass http://auth_backend;
        proxy_http_version 1.1;
        
        # Headers específicos para autenticação
        proxy_set_header X-Auth-Replica $upstream_addr;
        
        # Log para debug
        access_log /var/log/nginx/auth_access.log;
    }

    # Admin API - BALANCEAMENTO DE RÉPLICAS
    location /api/admin/ {
        rewrite ^/api/admin(/.*)$ /api/admin$1 break;
        proxy_pass http://admin_backend;
        proxy_http_version 1.1;
        
        # Headers específicos para admin
        proxy_set_header X-Admin-Replica $upstream_addr;
        
        # Log para debug
        access_log /var/log/nginx/admin_access.log;
    }

    # Catalog API - BALANCEAMENTO DE RÉPLICAS
    location /api/ {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass http://catalog_backend;
        proxy_http_version 1.1;
        
        # Timeouts maiores para uploads
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Headers específicos para catalog
        proxy_set_header X-Catalog-Replica $upstream_addr;
        
        # Log para debug
        access_log /var/log/nginx/catalog_access.log;
    }

    # Streaming - BALANCEAMENTO COM SESSÃO PERSISTENTE
    location /stream/ {
        proxy_pass http://streaming_backend/stream/;
        proxy_http_version 1.1;
        
        # Configurações específicas para streaming
        proxy_set_header Range $http_range;
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header X-Streaming-Replica $upstream_addr;
        
        # Timeouts para streaming
        proxy_connect_timeout 10s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        
        # Log para debug
        access_log /var/log/nginx/streaming_access.log;
    }
    
    # Health check para NGINX
    location /nginx_health {
        access_log off;
        return 200 "NGINX Load Balancer OK\n";
        add_header Content-Type text/plain;
    }
    
    # Status das réplicas
    location /nginx_status {
        access_log off;
        return 200 "Auth: 2 replicas\nCatalog: 2 replicas\nStreaming: 2 replicas\nAdmin: 2 replicas\n";
        add_header Content-Type text/plain;
    }
}

# ================================================================
# SERVIDORES DEDICADOS PARA CADA SERVIÇO (acesso direto)
# ================================================================

# Authentication Service - Porta 8000
server {
    listen 8000;
    server_name localhost;
    
    location / {
        proxy_pass http://auth_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Direct-Access "Auth-Service";
    }
}

# Catalog Service - Porta 8001  
server {
    listen 8001;
    server_name localhost;
    client_max_body_size 1024M;
    
    location / {
        proxy_pass http://catalog_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Direct-Access "Catalog-Service";
        
        # Timeouts para uploads
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
}

# Admin Service - Porta 8002
server {
    listen 8002;
    server_name localhost;
    
    location / {
        proxy_pass http://admin_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Direct-Access "Admin-Service";
    }
}

# Streaming Service - Porta 8003
server {
    listen 8003;
    server_name localhost;
    
    location / {
        proxy_pass http://streaming_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Direct-Access "Streaming-Service";
        proxy_buffering off;
        proxy_cache off;
    }
}